---
title: Tailwind CSS Best Practices
description: Tailwind CSS class ordering and patterns for Maya Research project
tags: [tailwind, css, styling, responsive]
alwaysApply: true
---

# Tailwind CSS Rules

## Class Ordering Convention

Follow this exact order for Tailwind classes to maintain consistency:

1. **Layout**: `container`, `flex`, `grid`, `block`, `inline`, `hidden`
2. **Position**: `relative`, `absolute`, `fixed`, `sticky`, `static`
3. **Inset**: `inset-*`, `top-*`, `right-*`, `bottom-*`, `left-*`
4. **Z-index**: `z-*`
5. **Display**: `flex`, `grid`, `block`, `inline-flex`, `inline-block`
6. **Flex/Grid**: `flex-row`, `flex-col`, `justify-*`, `items-*`, `gap-*`, `grid-cols-*`
7. **Spacing**: `m-*`, `mx-*`, `my-*`, `mt-*`, `mr-*`, `mb-*`, `ml-*`, `p-*`, `px-*`, `py-*`
8. **Sizing**: `w-*`, `h-*`, `min-w-*`, `min-h-*`, `max-w-*`, `max-h-*`
9. **Typography**: `font-*`, `text-*`, `leading-*`, `tracking-*`, `whitespace-*`
10. **Colors**: `text-*`, `bg-*`, `border-*`
11. **Borders**: `border`, `border-*`, `rounded-*`
12. **Effects**: `shadow-*`, `opacity-*`, `backdrop-*`
13. **Transitions**: `transition-*`, `duration-*`, `ease-*`
14. **Transforms**: `transform`, `scale-*`, `rotate-*`, `translate-*`
15. **States**: `hover:*`, `focus:*`, `active:*`, `disabled:*`
16. **Responsive**: `sm:*`, `md:*`, `lg:*`, `xl:*`, `2xl:*`

### Example

```html
<!-- ✅ Correct ordering -->
<div class="relative z-10 flex flex-col items-center justify-center gap-4 p-8 w-full max-w-4xl text-lg font-medium text-white bg-blue-600 rounded-lg shadow-lg transition-all duration-300 hover:bg-blue-700 md:flex-row md:p-12">
  Content
</div>

<!-- ❌ Incorrect ordering (random) -->
<div class="bg-blue-600 hover:bg-blue-700 p-8 text-white rounded-lg flex w-full shadow-lg relative flex-col md:flex-row">
  Content
</div>
```

## Responsive Design Principles

### Mobile-First Approach

Always write mobile styles first, then add responsive modifiers:

```html
<!-- ✅ Mobile-first -->
<div class="text-sm md:text-base lg:text-lg xl:text-xl">
  Responsive text
</div>

<!-- ❌ Don't use max-width breakpoints -->
<div class="text-xl lg:text-lg md:text-base text-sm">
  Wrong approach
</div>
```

### Breakpoint System

```
sm: 640px   (small tablets, large phones)
md: 768px   (tablets)
lg: 1024px  (laptops, small desktops)
xl: 1280px  (desktops)
2xl: 1536px (large desktops)
```

## Component Patterns

### Buttons

```html
<!-- Primary Button -->
<button class="inline-flex items-center justify-center gap-2 px-6 py-3 text-sm font-medium text-white bg-blue-600 rounded-lg transition-all duration-200 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed">
  Click me
</button>

<!-- Secondary Button -->
<button class="inline-flex items-center justify-center gap-2 px-6 py-3 text-sm font-medium text-blue-600 bg-white border border-blue-600 rounded-lg transition-all duration-200 hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 active:scale-95">
  Secondary
</button>
```

### Cards

```html
<div class="flex flex-col gap-4 p-6 bg-white border border-gray-200 rounded-xl shadow-sm transition-shadow duration-200 hover:shadow-lg">
  <h3 class="text-xl font-semibold text-gray-900">Card Title</h3>
  <p class="text-sm text-gray-600">Card description text goes here</p>
</div>
```

### Containers

```html
<!-- Full-width container with max-width -->
<div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
  Content
</div>

<!-- Section container -->
<section class="py-12 md:py-16 lg:py-20">
  <div class="container mx-auto px-4">
    Section content
  </div>
</section>
```

## Spacing Scale

Use consistent spacing throughout:

- `gap-1` (4px) - Tight spacing
- `gap-2` (8px) - Small spacing
- `gap-4` (16px) - Default spacing
- `gap-6` (24px) - Medium spacing
- `gap-8` (32px) - Large spacing
- `gap-12` (48px) - Extra large spacing
- `gap-16` (64px) - Section spacing

## Typography

```html
<!-- Headings -->
<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold leading-tight tracking-tight text-gray-900">
  Main Heading
</h1>

<h2 class="text-3xl md:text-4xl font-semibold leading-tight text-gray-800">
  Subheading
</h2>

<!-- Body text -->
<p class="text-base leading-relaxed text-gray-600">
  Body text paragraph
</p>

<!-- Small text -->
<span class="text-sm text-gray-500">
  Caption or helper text
</span>
```

## Colors

### Semantic Color Usage

```html
<!-- Primary (brand color) -->
<div class="text-blue-600 bg-blue-50 border-blue-200">Primary</div>

<!-- Success -->
<div class="text-green-600 bg-green-50 border-green-200">Success</div>

<!-- Warning -->
<div class="text-yellow-600 bg-yellow-50 border-yellow-200">Warning</div>

<!-- Error -->
<div class="text-red-600 bg-red-50 border-red-200">Error</div>

<!-- Neutral -->
<div class="text-gray-600 bg-gray-50 border-gray-200">Neutral</div>
```

## Custom Utilities

When you need custom styles beyond Tailwind's utilities, use Astro's scoped styles:

```astro
---
// Component script
---

<div class="custom-gradient">
  Content with custom styling
</div>

<style>
  .custom-gradient {
    background: linear-gradient(180deg, #024dad 0%, #28a5fa 54.702%);
  }
  
  /* Maintain Tailwind-like naming for custom utilities */
  .text-balance {
    text-wrap: balance;
  }
</style>
```

## Animations & Transitions

```html
<!-- Fade in animation -->
<div class="opacity-0 transition-opacity duration-500 animate-fade-in">
  Fades in
</div>

<!-- Slide up animation -->
<div class="translate-y-4 opacity-0 transition-all duration-500 animate-slide-up">
  Slides up
</div>

<!-- Hover effects -->
<button class="transition-all duration-200 hover:scale-105 hover:shadow-lg active:scale-95">
  Interactive button
</button>
```

## Dark Mode (Future)

Prepare for dark mode support:

```html
<div class="bg-white text-gray-900 dark:bg-gray-900 dark:text-white">
  Dark mode ready
</div>
```

## Accessibility

Always include accessibility utilities:

```html
<!-- Screen reader only -->
<span class="sr-only">Screen reader text</span>

<!-- Focus visible -->
<button class="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
  Accessible button
</button>

<!-- Keyboard navigation -->
<a href="#" class="focus-visible:ring-2 focus-visible:ring-blue-500">
  Link
</a>
```

## Common Patterns

### Center Content

```html
<!-- Vertical & horizontal center -->
<div class="flex items-center justify-center min-h-screen">
  Centered content
</div>

<!-- Horizontal center only -->
<div class="flex justify-center">
  Centered content
</div>

<!-- Using margin auto -->
<div class="mx-auto max-w-4xl">
  Centered container
</div>
```

### Aspect Ratios

```html
<!-- 16:9 aspect ratio -->
<div class="relative aspect-video">
  <img src="..." alt="..." class="absolute inset-0 w-full h-full object-cover" />
</div>

<!-- Square aspect ratio -->
<div class="aspect-square">
  Content
</div>
```

### Overlays

```html
<div class="relative">
  <img src="..." alt="..." class="w-full h-full object-cover" />
  <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <p class="text-white text-xl">Overlay content</p>
  </div>
</div>
```

## Performance Tips

1. **Avoid arbitrary values when possible**: Use the design system scales
   - ✅ `w-64` instead of ❌ `w-[256px]`
   
2. **Use Tailwind's purge in production**: Already configured in Tailwind v4

3. **Group responsive modifiers**: Keep responsive variants together
   ```html
   <div class="text-sm md:text-base lg:text-lg">Text</div>
   ```

## Summary Checklist

- [ ] Classes ordered according to convention (Layout → Spacing → Sizing → Typography → Colors → Effects → States → Responsive)
- [ ] Mobile-first responsive design
- [ ] Consistent spacing scale used
- [ ] Semantic color usage
- [ ] Proper hover/focus states
- [ ] Accessibility utilities included
- [ ] Transitions for interactive elements
- [ ] Avoid arbitrary values unless absolutely necessary
